component ThermalLumpingAdapter
    % Copyright 2022 The MathWorks, Inc.
    
    parameters
        CellsInParallel = {1,'1'};  % Number of cells in parallel
        CellsInSeries = {1,'1'};    % Number of cells in series
    end

    variables(Access=private)
        HeatFlowLumped = {0,'W'};          % Current at lumped node
        HeatFlowBattery = {0,'W'};         % Current at battery node
    end

    branches
        HeatFlowLumped : * -> LumpedNode.Q;
        HeatFlowBattery : CellNode.Q -> LumpedNode.Q;
    end

    nodes(ExternalAccess=none)
        LumpedNode = foundation.thermal.thermal;  % l:left
        CellNode = foundation.thermal.thermal; % c:right
    end

    equations
        CellNode.T == LumpedNode.T /CellsInSeries;
        HeatFlowLumped == HeatFlowBattery * (CellsInParallel-1);
    end
end